@model Fast.Web.Models.CustomerListModel
@using Fast.Web.Resources;
@using Newtonsoft.Json;

@{
    var territories = Model.Customers.Select(x => x.teritorry).Distinct().ToList();
    Model.Customers = Model.Customers.Where(x => x.teritorry == Model.Territory).ToList();
}

@section Styles{
    <link href="~/Content/dashforge/assets/css/dashforge.css" rel="stylesheet">

    <style>
        body.dragging, body.dragging * {
          cursor: move !important;
        }

        .dragged {
          position: absolute;
          opacity: 0.5;
          z-index: 2000;
        }
        
        ol.cust-order li {
          cursor: pointer;
        }

        ol.cust-order li.placeholder {
          position: relative;
          /** More li styles **/
        }
        ol.cust-order li.placeholder:before {
          position: absolute;
          /** Define arrowhead **/
        }
    </style>
}

<div class="content content-fixed content-auth-alt pd-0-f">
    <div class="container-fluid ht-100p pd-0-f">
        <div class="ht-100p d-flex flex-column">
            <div class="row mg-0">
                <div class="col-9">
                    <div id="map" style="min-height:500px"></div>
                </div>
                <div class="col-3" style="height:500px;overflow: scroll;">
                    <br>
                    Select Territory:
                    <select class="custom-select" id="territory_selection">
                        @foreach (var teri in territories)
                        {
                            <option value="@teri" @(teri == Model.Territory ? "selected" : "")>@teri</option>
                        }
                    </select>

                    <br><br>
                    You can drag &amp; drop to adjust the order
                    <ol class="cust-order pd-l-30 mg-t-10">
                        @foreach(var cust in Model.Customers)
                        {
                            <li data-id="@cust.ID" data-name="@cust.customer_code" class="pd-5">@cust.customer_code - @cust.customer_name</li>
                        }
                    </ol>

                    <div class="row pd-20">
                        <button type="button" class="btn btn-primary col-12" onclick="save()">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div><!-- container -->
</div><!-- content -->

@section Scripts{
    <script src="~/Content/theme/js/jquery-1.10.0.min.js"></script>
    <script src="~/Content/dashforge/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/dashforge/lib/jquery-sortable/js/jquery-sortable-min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDpjc1xdCmFJ6pptU_NVA54Cjpi_kqFaEU&libraries=geometry"></script>

    <script type="text/javascript">
        var allcusts = @(Html.Raw((JsonConvert.SerializeObject(Model.Customers)).Replace("\n", "").Replace("\r", "").Replace("\t", "").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"")));
        var allterritories = @(Html.Raw((JsonConvert.SerializeObject(territories)).Replace("\n", "").Replace("\r", "").Replace("\t", "").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"")));

        console.log(allterritories);

        var jsonString;
        var map;
        var markers = [];
        var markerselected = [];
        var markerselectedID = 0;
        var selecting = false;
        var geocoder = new google.maps.Geocoder();
        var infoWindow;
        var icon = "http://labs.google.com/ridefinder/images/mm_20_white.png";
        var icon_selected = "http://maps.google.com/mapfiles/arrow.png";

        function initialize() {
            //******************************************************************************************** INIT GMAP
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 0, lng: 0},
                zoom: 14,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            infoWindow = new google.maps.InfoWindow();

            //******************************************************************************************** SET CENTER OF THE MAP
            geocoder.geocode({'address': "@(Model.Customers[0].kecamatan + " " + Model.Customers[0].dati_II) indonesia"}, function(results, status) {
                if (status === 'OK') {
                    map.setCenter(results[0].geometry.location);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });

            function addMarkerEvent(marker, info) {

                //******************************************************************************************** KETIKA MARKER CLICKED
                google.maps.event.addListener(marker, "click", function (e) {
                    infoWindow.setContent(info);
                    infoWindow.open(map, marker);

                    //alert(marker.get('data_id'));
                    $('.cust-order').find('[data-id="' + markerselectedID + '"]').removeClass("bg-primary");
                    $('.cust-order').find('[data-id="' + marker.get('data_id') + '"]').addClass("bg-primary");
                    markerselectedID = marker.get('data_id');
                });
            }

            //******************************************************************************************** GAMBAR MARKER
            function initmarker() {
                for (var i = 0, allcust; allcust = allcusts[i]; i++) {
                    var locat = new google.maps.LatLng(allcust.geographical_x, allcust.geographical_y);
                    allcusts[i].koordinat = locat;
                    marker = new google.maps.Marker({
                        position: locat,
                        icon: {
                            url: icon,
                            labelOrigin: new google.maps.Point(6, 25)
                        },
                        label: {
                            text: String(i+1),
                            color: '#ef00ff',
                            fontSize: '14px',
                            fontWeight: 'bold'
                        },
                        //animation: google.maps.Animation.DROP,
                        map: map,
                        data_id: allcust.ID,
                        title: allcust.customer_code + " (" + allcust.teritorry + ")"
                    });

                    addMarkerEvent(marker, '<b>' + allcust.customer_code + '</b><br>' + allcust.customer_name + '<br>' + allcust.customer_address + '<br>' + allcust.teritorry);
                    markers[allcust.ID] = marker;
                }
            }
            initmarker();
        }

        function save() {
            $.ajax({
                    type: "POST",
                    url: "@Url.Action("Define", "Route")",
                    data: JSON.stringify({
                        //territory: $('#territory_selection').val(),
                        data: jsonString
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        if (result.Status == 'True') {
                            //alert("berhasil approve");
                        }
                        else {
                            //alert("gagal simpan perubahan");
                        }

                        location.reload();
                    }
            });

            
        }

        $(document).ready(function () {
            google.maps.event.addDomListener(window, 'load', initialize);

            var group = $("ol.cust-order").sortable({
              group: 'cust-order',
              delay: 500,
              onDrop: function ($item, container, _super) {
                var data = group.sortable("serialize").get();
                  console.log(data);

                  for (var i = 0; i < data[0].length; i++) {
                      (markers[data[0][i].id]).set('label', {
                            text: String(i+1),
                            color: '#ef00ff',
                            fontSize: '14px',
                            fontWeight: 'bold'
                        });
                  }

                  jsonString = JSON.stringify(data[0], null, ' ');
                  jsonString = jsonString.replace(/\r?\n|\r/g, '');

                _super($item, container);
              }
            });


            $("#territory_selection").change(function () {
                window.location.href = "/Route/Index/"+$(this).val();
            })


            $('ol.cust-order li').click(function () {
                if (markerselected.length > 0) {
                    for (var i = 0, mark; mark = markerselected[i]; i++) {
                        mark.setIcon({
                            url: icon,
                            labelOrigin: new google.maps.Point(6, 25)
                        });
                    }
                }
                markerselected = [];

                (markers[$(this).attr('data-id')]).setIcon({
                            url: icon_selected,
                            labelOrigin: new google.maps.Point(6, 25)
                        });
                markerselected.push(markers[$(this).attr('data-id')]);
            })
        });
    </script>
}