@model Fast.Web.Models.CustomerListModel
@using Fast.Web.Resources;
@using Newtonsoft.Json;

@{
    var territories = Model.Customers.Select(x => x.teritorry).Distinct().ToList();
    var counter = 0;
    Dictionary<string, string> colors = new Dictionary<string, string>();
    colors.Add("color0", "e60000");
    colors.Add("color1", "ff6633");
    colors.Add("color2", "ffcc00");
    colors.Add("color3", "ffff33");
    colors.Add("color4", "99ff66");
    colors.Add("color5", "009900");
    colors.Add("color6", "00b3e6");
    colors.Add("color7", "0000cc");
    colors.Add("color8", "330066");
    colors.Add("color9", "8000b3");
    colors.Add("color10", "898989");
    colors.Add("color11", "8c564b");
}

@section Styles{
    <link href="~/Content/dashforge/assets/css/dashforge.css" rel="stylesheet">
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.4.1/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v1.4.1/mapbox-gl.css' rel='stylesheet' />
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.min.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.4.2/mapbox-gl-geocoder.css" type="text/css" />
    <!-- Promise polyfill script required to use Mapbox GL Geocoder in IE 11 -->
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>
    <script src="https://unpkg.com/@("@")mapbox/mapbox-sdk/umd/mapbox-sdk.min.js"></script>
    <script src="https://api.tiles.mapbox.com/mapbox.js/plugins/turf/v3.0.11/turf.min.js"></script>
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-draw/v1.0.9/mapbox-gl-draw.css" type="text/css" />

    <style>
        .marker {
            display: block;
            border: none;
            //border-radius: 50%;
            cursor: pointer;
            padding: 0;
            background-color: transparent;
        }
    </style>
}

<div class="content content-fixed content-auth-alt pd-0-f">
    <div class="container-fluid ht-100p pd-0-f">
        <div class="ht-100p d-flex flex-column">
            <div class="row mg-0">
                <div class="col-8 pd-0">
                    <div id="map" style="min-height:550px"></div>
                </div>
                <div class="col-4">
                    <br>
                    Use Ctrl+click to select multiple markers, or draw a shape around markers to select them.
                    <br><br>

                    Selected markers:
                    <div class="form-group">
                        <textarea id="selected_markers" class="form-control" rows="3"></textarea>
                    </div>

                    <div class="row">
                        <div class="col-6">
                            Place to territory:
                            @foreach (var teri in territories)
                            {
                                <div class="custom-control custom-radio" style="background-color: #@(colors["color"+counter++]);padding: 5px 2rem;">
                                    <input type="radio" name="territory" id="@(teri)" value="@(teri)" class="custom-control-input">
                                    <label class="custom-control-label font-weight-bold tx-white" for="@(teri)">@teri</label>
                                </div>
                            }
                        </div>
                        <div class="col-6">
                            Visit Day:
                            <div class="custom-control custom-radio" style="background-color: #000;padding: 5px 2rem;">
                                <input type="radio" name="day" id="0" value="Monday" class="custom-control-input">
                                <label class="custom-control-label font-weight-bold tx-white" for="0">Monday <img src="/content/marker/day0.png" width="20" style="float:right;margin-left: 5px;" /></label>
                            </div>
                            <div class="custom-control custom-radio" style="background-color: #000;padding: 5px 2rem;">
                                <input type="radio" name="day" id="1" value="Tuesday" class="custom-control-input">
                                <label class="custom-control-label font-weight-bold tx-white" for="1">Tuesday <img src="/content/marker/day1.png" width="20" style="float:right;margin-left: 5px;" /></label>
                            </div>
                            <div class="custom-control custom-radio" style="background-color: #000;padding: 5px 2rem;">
                                <input type="radio" name="day" id="2" value="Wednesday" class="custom-control-input">
                                <label class="custom-control-label font-weight-bold tx-white" for="2">Wednesday <img src="/content/marker/day2.png" width="20" style="float:right;margin-left: 5px;" /></label>
                            </div>
                            <div class="custom-control custom-radio" style="background-color: #000;padding: 5px 2rem;">
                                <input type="radio" name="day" id="3" value="Thursday" class="custom-control-input">
                                <label class="custom-control-label font-weight-bold tx-white" for="3">Thursday <img src="/content/marker/day3.png" width="20" style="float:right;margin-left: 5px;" /></label>
                            </div>
                            <div class="custom-control custom-radio" style="background-color: #000;padding: 5px 2rem;">
                                <input type="radio" name="day" id="4" value="Friday" class="custom-control-input">
                                <label class="custom-control-label font-weight-bold tx-white" for="4">Friday <img src="/content/marker/day4.png" width="20" style="float:right;margin-left: 5px;" /></label>
                            </div>
                            <div class="custom-control custom-radio" style="background-color: #000;padding: 5px 2rem;">
                                <input type="radio" name="day" id="5" value="null" class="custom-control-input">
                                <label class="custom-control-label font-weight-bold tx-white" for="5">Not Defined <img src="/content/marker/day5.png" width="20" style="float:right;margin-left: 5px;" /></label>
                            </div>
                        </div>
                    </div>

                    <div class="row pd-20">
                        <button type="button" class="btn btn-primary col-12" onclick="applySelection()">Apply</button>
                    </div>
                </div>
            </div>
        </div>
    </div><!-- container -->
</div><!-- content -->

@section Scripts{
    <script src="~/Content/theme/js/jquery-1.10.0.min.js"></script>
    <script src="~/Content/dashforge/lib/bootstrap/js/bootstrap.bundle.min.js"></script>

    <script>
        var allcusts = @(Html.Raw((JsonConvert.SerializeObject(Model.Customers)).Replace("\n", "").Replace("\r", "").Replace("\t", "").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"")));
        var allterritories = @(Html.Raw((JsonConvert.SerializeObject(territories)).Replace("\n", "").Replace("\r", "").Replace("\t", "").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"").Replace(" \"", "\"")));
        var weekday = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday']; //, 'Saturday', 'Sunday'

        var selecting = false;
        var selected = [];
        var draw;
        var geojson = {
            'type': 'FeatureCollection',
            'features': []
        };

        window.onkeydown = function(e) {
            selecting = ((e.keyIdentifier == 'Control') || (e.ctrlKey == true));
        }
        window.onkeyup = function(e) {
            selecting = false;
        }

        for (var i = 0; i < allcusts.length; i++) {
            var allcust = allcusts[i];
            var day_index = weekday.indexOf(allcust.visit_day)

            if (day_index < 0)
                day_index = 5;

            if (allcust.geographical_x == "NULL" || allcust.geographical_y == "NULL" || Math.abs(parseInt(allcust.geographical_x)) == 0 || Math.abs(parseInt(allcust.geographical_x)) > 1000 || Math.abs(parseInt(allcust.geographical_y)) > 1000) {
                // skip data2 yg ccd
            } else {
                geojson.features.push({
                    'type': 'Feature',
                        'properties': {
                            'id': allcust.customer_code,
                            'territory': allcust.teritorry,
                            'visit': allcust.visit_day,
                            'message': '<b>' + allcust.customer_code + '</b><br>' + allcust.customer_name + '<br>' + allcust.customer_address + '<br>' + allcust.teritorry,
                            'iconSize': [30, 30],
                            'iconFile': '/content/marker/c_'+ allterritories.indexOf(allcust.teritorry) +'_'+day_index+'.png'
                        },
                        'geometry': {
                            'type': 'Point',
                            'coordinates': [allcust.geographical_y, allcust.geographical_x]
                        }
                });
            }
        }



        function setTarget(target) {
            $(target).css('background-image', 'url(/content/marker/c_selected.png)');
            selected.push($(target).attr('id'));

            document.getElementById('selected_markers').value = selected.join(", ");
        }

        function resetMarker() {
            draw.deleteAll();

            if (selected.length > 0) {
                for (var i = 0; i < selected.length; i++) {
                    var day_index = weekday.indexOf($('#'+selected[i]).attr('data-visit'));

                    if (day_index < 0)
                        day_index = 5;

                    $('#'+selected[i]).css('background-image', 'url(/content/marker/c_'+ allterritories.indexOf($('#'+selected[i]).attr('data-territory')) +'_'+day_index+'.png)');
                }
            }

            selected = [];
            document.getElementById('selected_markers').value = "";
        }

        function updateArea() {
            var data = draw.getAll();

            if (data.features.length > 0) {
                //var area = turf.area(data);

                for (var h = 0; h < data.features.length; h++) {
                    for (var i = 0; i < allcusts.length; i++) {
                        var allcust = allcusts[i];

                        var point = turf.point([allcust.geographical_y, allcust.geographical_x]); 
                        var polygon = turf.polygon(data.features[h].geometry.coordinates); 

                        if (turf.inside(point, polygon)) {
                            setTarget('#'+allcust.customer_code);
                        }
                    }
                } 
            } else {
                resetMarker();
            }
        }

        mapboxgl.accessToken = 'pk.eyJ1IjoiY2hhbmlmIiwiYSI6ImNpc2I1YnJ4OTAwMDMydnFvZDU3YzRydnMifQ.V_ra23LFfun83xlNR6PaXA';
        var mapboxClient = mapboxSdk({
            accessToken: mapboxgl.accessToken
        });
        mapboxClient.geocoding.forwardGeocode({
                query: "@(Model.Customers[0].kecamatan + " " + Model.Customers[0].dati_II) indonesia",
                autocomplete: false,
                limit: 1
            })
            .send()
            .then(function(response) {
                if (
                    response &&
                    response.body &&
                    response.body.features &&
                    response.body.features.length
                ) {
                    var feature = response.body.features[0];

                    var map = new mapboxgl.Map({
                        container: 'map',
                        style: 'mapbox://styles/mapbox/streets-v11',
                        center: feature.center,
                        zoom: 10
                    });
                    new mapboxgl.Marker().setLngLat(feature.center).addTo(map);

                    map.addControl(
                        new MapboxGeocoder({
                            accessToken: mapboxgl.accessToken,
                            mapboxgl: mapboxgl
                        })
                    );

                    // Add geolocate control to the map.
                    map.addControl(
                        new mapboxgl.GeolocateControl({
                            positionOptions: {
                                enableHighAccuracy: true
                            },
                            trackUserLocation: true
                        })
                    );

                    // Add zoom and rotation controls to the map.
                    map.addControl(new mapboxgl.NavigationControl());


                    draw = new MapboxDraw({
                        displayControlsDefault: false,
                        controls: {
                            polygon: true,
                            trash: true
                        }
                    });

                    map.addControl(draw);
 
                    map.on('draw.create', updateArea);
                    map.on('draw.delete', updateArea);
                    //map.on('draw.update', updateArea);
 
                    

                    geojson.features.forEach(function(marker) {
                        // create a DOM element for the marker
                        var el = document.createElement('div');
                        el.id = marker.properties.id;
                        el.className = 'marker';
                        el.style.backgroundImage = 'url(' + marker.properties.iconFile + ')';
                        el.style.backgroundSize = marker.properties.iconSize[0] + 'px';
                        el.style.width = marker.properties.iconSize[0] + 'px';
                        el.style.height = marker.properties.iconSize[1] + 'px';

                        el.setAttribute('data-territory' , marker.properties.territory);
                        el.setAttribute('data-visit' , marker.properties.visit);

                        var popup = new mapboxgl.Popup({ offset: 25 }).setHTML(marker.properties.message);

                        //console.log(marker.geometry.coordinates);

                        // add marker to map
                        new mapboxgl.Marker(el)
                            .setLngLat(marker.geometry.coordinates)
                            .setPopup(popup) // sets a popup on this marker
                            .addTo(map);

                        el.addEventListener('click', function (e) {
                            if (!selecting) {
                                resetMarker();
                                updateArea();
                            }

                            setTarget(e.target);
                        });
                    });
                }
            });

        function applySelection() {
            var terValue = $("input[name='territory']:checked").val();
            var dayValue = $("input[name='day']:checked").val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("Update", "Home")",
                data: JSON.stringify({
                    customers: selected,
                    territory: terValue,
                    visit_day: dayValue
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Status == 'True') {
                        alert("berhasil tersimpan");
                    }
                    else {
                        alert("gagal tersimpan");
                    }
                }
            });

            if (selected.length > 0) {
                for (var i = 0; i < selected.length; i++) {
                    if (typeof terValue !== 'undefined') 
                        $('#' + selected[i]).attr('data-territory', terValue);
                    if (typeof dayValue !== 'undefined') 
                        $('#' + selected[i]).attr('data-visit', dayValue);
                }
            }

            resetMarker();
            $('input[name="territory"]').attr('checked', false);
            $('input[name="day"]').attr('checked', false);
        }

    </script>

    <!--
    <script type="text/javascript">

        console.log(allterritories);

        var map;
        var markers = [];
        var markerselected = [];
        var selecting = false;
        var polygon;
        var polygonMarkers = [];
        var polygonLocations = [];
        var geocoder = new google.maps.Geocoder();
        var infoWindow;
        var icons = ["mm_20_purple",
            "mm_20_yellow",
            "mm_20_blue",
            "mm_20_green",
            "mm_20_red",
            "mm_20_orange",
            "mm_20_gray",
            "mm_20_brown",
            "mm_20_black"];

        var icon_selected = "mm_20_white";

        window.onkeydown = function(e) {
            selecting = ((e.keyIdentifier == 'Control') || (e.ctrlKey == true));
        }
        window.onkeyup = function(e) {
            selecting = false;
        }

        function initialize() {
            //******************************************************************************************** INIT GMAP
            map = new google.maps.Map(document.getElementById('map'), {
                center: {lat: 0, lng: 0},
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            infoWindow = new google.maps.InfoWindow();

            //******************************************************************************************** SET CENTER OF THE MAP
            geocoder.geocode({'address': "@(Model.Customers[0].kecamatan + " " + Model.Customers[0].dati_II) indonesia"}, function(results, status) {
                if (status === 'OK') {
                    map.setCenter(results[0].geometry.location);
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });

            function addMarkerEvent(marker, info) {
                //******************************************************************************************** KETIKA MARKER DROP
                google.maps.event.addListener(marker, "dragend", function (event) {
                    var lat = event.latLng.lat();
                    var lng = event.latLng.lng();

                    console.log(lat + ' , ' + lng);
                    console.log(marker.get('customer_code'));

                    for (var i = 0, allcust; allcust = allcusts[i]; i++) {
                        if (allcust.customer_code == marker.get('customer_code')) {
                            var locat = new google.maps.LatLng(lat, lng);
                            allcusts[i].koordinat = locat;
                        }
                    }

                });

                //******************************************************************************************** KETIKA MARKER CLICKED
                google.maps.event.addListener(marker, "click", function (e) {
                    if (selecting) {
                        marker.setIcon("http://labs.google.com/ridefinder/images/" + icon_selected + ".png");
                        markerselected.push(marker);

                        var a = 260891;
                        if (document.getElementById('selected_markers').value == '') {
                            a = 0;
                        }
                        document.getElementById('selected_markers').value += (a > 0 ? ', ' : '') + marker.get('customer_code');

                    } else {
                        clearSelection();
                        markerselected.push(marker);
                        marker.setIcon("http://labs.google.com/ridefinder/images/" + icon_selected + ".png");
                        document.getElementById('selected_markers').value = marker.get('customer_code');
                    }


                    console.log(markerselected);

                    infoWindow.setContent(info);
                    infoWindow.open(map, marker);
                });
            }

            //******************************************************************************************** GAMBAR MARKER
            function initmarker() {
                var counter = -1;
                var last_territory = 0;
                for (var i = 0, allcust; allcust = allcusts[i]; i++) {
                    if (last_territory != allcust.teritorry) {
                        counter++;
                        console.log(last_territory);
                        last_territory = allcust.teritorry;
                    }

                    var locat = new google.maps.LatLng(allcust.geographical_x, allcust.geographical_y);
                    allcusts[i].koordinat = locat;
                    marker = new google.maps.Marker({
                        position: locat,
                        draggable: true,
                        icon: "http://labs.google.com/ridefinder/images/" + icons[counter] + ".png",
                        //animation: google.maps.Animation.DROP,
                        map: map,
                        customer_code: allcust.customer_code,
                        default_icon: "http://labs.google.com/ridefinder/images/" + icons[counter] + ".png",
                        title: allcust.customer_code + " (" + allcust.teritorry + ")"
                    });

                    addMarkerEvent(marker, '<b>' + allcust.customer_code + '</b><br>' + allcust.customer_name + '<br>' + allcust.customer_address + '<br>' + allcust.teritorry);
                    markers[allcust.customer_code] = marker;
                }
            }
            initmarker();


            //******************************************************************************************** GAMBAR POLYGON UNTUK SELECTION
            google.maps.event.addListener(map, 'click', function (e) {
                // set a marker there, with a small measle icon
                var position = e.latLng;
                polygonLocations.push(position);
                polygonMarkers.push(new google.maps.Marker({
                    icon: 'https://maps.gstatic.com/intl/en_ALL/mapfiles/markers2/measle.png',
                    position: position,
                    map: map
                }));
                // now let's add a polygon
                drawPolygon(polygonLocations);
            });
        }

        // draws a polygon
        function drawPolygon(points) {
            if (points.length < 3) {
                return;
            }
            // first delete the previous polygon
            if (polygon) {
                polygon.setMap(null);
            }

            polygon = new google.maps.Polygon({
                paths: points,
                strokeColor: '#FF0000',
                strokeOpacity: 0.8,
                strokeWeight: 2,
                fillColor: '#FF0000',
                fillOpacity: 0.35,
                map: map
            });
            // display to input
            displaySelectedMarkers(polygon);
        }

        // display the selected markers to input.
        function displaySelectedMarkers(polygon) {
            var a = 260891;
            if (document.getElementById('selected_markers').value == '') {
                a = 0;
            }

            for (var i = 0, allcust; allcust = allcusts[i]; i++) {

                if (google.maps.geometry.poly.containsLocation(allcust.koordinat, polygon)) {
                    document.getElementById('selected_markers').value += (a++ > 0 ? ', ' : '') + allcust.customer_code;
                    (markers[allcust.customer_code]).setIcon("http://labs.google.com/ridefinder/images/" + icon_selected + ".png");
                    markerselected.push((markers[allcust.customer_code]));
                }
            }
        }

        function clearSelection() {
            if (polygon) {
                polygon.setMap(null);
            }
            for (var i in polygonMarkers) {
                polygonMarkers[i].setMap(null);
            }
            polygonLocations = [];

            console.log("marker selected:");
            console.log(markerselected);
            if (markerselected.length > 0) {
                for (var i = 0, mark; mark = markerselected[i]; i++) {
                    mark.setIcon(mark.get('default_icon'));
                }
            }
            markerselected = [];

            document.getElementById('selected_markers').value = '';
        }

        function applySelection() {
            var radioValue = $("input[name='territory']:checked").val();
            radioValue = radioValue - 1;
            var radioID = $("input[name='territory']:checked").attr('id');

            console.log(radioValue);
            console.log(radioID);

            if (radioID === undefined) {
                alert("Please select territory above!");
            } else {
                if (markerselected.length > 0) {
                    for (var i = 0, mark; mark = markerselected[i]; i++) {
                        //mark.setIcon("http://labs.google.com/ridefinder/images/" + icons[radioValue] + ".png");
                        mark.default_icon = "http://labs.google.com/ridefinder/images/" + icons[radioValue] + ".png";
                    }
                }
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("Insert", "Approval")",
                data: JSON.stringify({
                    customers: $('#selected_markers').val(),
                    territory: radioID
                }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.Status == 'True') {
                        alert("berhasil tersimpan");
                    }
                    else {
                        alert("gagal tersimpan");
                    }
                }

            });

            clearSelection();
        }


        $(document).ready(function () {
            google.maps.event.addDomListener(window, 'load', initialize);
        });
    </script>
    -->
}